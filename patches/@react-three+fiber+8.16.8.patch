diff --git a/node_modules/@react-three/fiber/dist/react-three-fiber.esm.js b/node_modules/@react-three/fiber/dist/react-three-fiber.esm.js
index 45b85a3..08b609c 100644
--- a/node_modules/@react-three/fiber/dist/react-three-fiber.esm.js
+++ b/node_modules/@react-three/fiber/dist/react-three-fiber.esm.js
@@ -2253,7 +2253,7 @@
  * @see https://docs.pmnd.rs/react-three-fiber/api/canvas
  */
 const Canvas = /*#__PURE__*/React.forwardRef(({
-  children,
+  children: fremeworkChildren,
   gl,
   events,
   shadows,
@@ -2271,7 +2271,7 @@
   // Local, reactive state
   const [initiated, setInitiated] = React.useState(false);
   const [vr, setVr] = React.useState(false);
-  const [canvas, setCanvas] = React.useState(null);
+  const [canvas, setCanvas] = React.useState(globalThis.document?.createElement('canvas'));
   const [size, setSize] = React.useState({
     width: 0,
     height: 0,
@@ -2280,7 +2280,7 @@
   });
   const [state, setState] = React.useState();
   const {
-    current: fiber
+    current: Children
   } = React.useRef(null);
 
   // Create a memoized render function. This will be called in the animation loop
@@ -2313,7 +2313,7 @@
     dpr,
     camera: cameraOptions,
     shadows,
-    children
+    children: fremeworkChildren
   }), [gl, cameraOptions, events, raycaster, shadows, dpr, size, vr, frameloop, linear, flat, orthographic, performance, clock, frameloop, fremeworkChildren, initiated, setInitiated]);
 
   // This is the render-loop, it gets called once, either via start or manually
@@ -2372,7 +2372,7 @@
     width: '100%',
     height: '100%',
     ...style
-  }, state, setCanvas, fiber, setSize, id, className, onCreated);
+  }, state, setCanvas, Children, setSize, id, className, onCreated);
 
   // Render the canvas and the children.
   // VR mode has to be enabled with a button, there is no automatic way to enter it.
@@ -2380,7 +2380,7 @@
   // This means three has to be booted and this component has to be mounted THREE.XR.enabled must be true.
   return /*#__PURE__*/React.createElement(React.Fragment, null, props.fallback, canvas && /*#__PURE__*/React.createElement("div", {
     style: {
-      position: 'relative',
+      position: 'absolute',
       width: size.width,
       height: size.height,
       overflow: 'hidden',
@@ -2388,7 +2388,7 @@
       top: size.top,
       left: size.left
     }
-  }, /*#__PURE__*/React.createElement(react.unstable_ConcurrentMode, null, /*#__PURE__*/React.createElement("div", {
+  }, /*#__PURE__*/React.createElement("div", {
     ref: measure,
     id: id,
     className: className,
@@ -2397,7 +2397,7 @@
       width: '100%',
       height: '100%',
       ...style
-    }
+    }, fremeworkChildren ? /*#__PURE__*/React.createElement(FiberProvider, fiber) : null
   }), state && /*#__PURE__*/React.createElement(Portal, {
     state: state,
     graphs: graphs,
@@ -2405,7 +2405,7 @@
     handlePointer: handlePointer,
     events: events,
     setEvents: setEvents
-  }, children))), vr && createPortal( /*#__PURE__*/React.createElement(VRButton, {
+  }, fremeworkChildren)), vr && createPortal( /*#__PURE__*/React.createElement(VRButton, {
     enterOnly: true
   }), canvas.parentElement));
 });
diff --git a/node_modules/@react-three/fiber/dist/react-three-fiber.cjs.js b/node_modules/@react-three/fiber/dist/react-three-fiber.cjs.js
index ca240bb..2fd2f5e 100644
--- a/node_modules/@react-three/fiber/dist/react-three-fiber.cjs.js
+++ b/node_modules/@react-three/fiber/dist/react-three-fiber.cjs.js
@@ -2537,7 +2537,7 @@
  * @see https://docs.pmnd.rs/react-three-fiber/api/canvas
  */
 const Canvas = /*#__PURE__*/React__default.forwardRef(({
-  children,
+  children: fremeworkChildren,
   gl,
   events,
   shadows,
@@ -2555,7 +2555,7 @@
   // Local, reactive state
   const [initiated, setInitiated] = React__default.useState(false);
   const [vr, setVr] = React__default.useState(false);
-  const [canvas, setCanvas] = React__default.useState(null);
+  const [canvas, setCanvas] = React__default.useState(globalThis.document?.createElement('canvas'));
   const [size, setSize] = React__default.useState({
     width: 0,
     height: 0,
@@ -2564,7 +2564,7 @@
   });
   const [state, setState] = React__default.useState();
   const {
-    current: fiber
+    current: Children
   } = React__default.useRef(null);
 
   // Create a memoized render function. This will be called in the animation loop
@@ -2597,7 +2597,7 @@
     dpr,
     camera: cameraOptions,
     shadows,
-    children
+    children: fremeworkChildren
   }), [gl, cameraOptions, events, raycaster, shadows, dpr, size, vr, frameloop, linear, flat, orthographic, performance, clock, frameloop, fremeworkChildren, initiated, setInitiated]);
 
   // This is the render-loop, it gets called once, either via start or manually
@@ -2656,7 +2656,7 @@
     width: '100%',
     height: '100%',
     ...style
-  }, state, setCanvas, fiber, setSize, id, className, onCreated);
+  }, state, setCanvas, Children, setSize, id, className, onCreated);
 
   // Render the canvas and the children.
   // VR mode has to be enabled with a button, there is no automatic way to enter it.
@@ -2664,7 +2664,7 @@
   // This means three has to be booted and this component has to be mounted THREE.XR.enabled must be true.
   return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, props.fallback, canvas && /*#__PURE__*/React__default.createElement("div", {
     style: {
-      position: 'relative',
+      position: 'absolute',
       width: size.width,
       height: size.height,
       overflow: 'hidden',
@@ -2672,7 +2672,7 @@
       top: size.top,
       left: size.left
     }
-  }, /*#__PURE__*/React__default.createElement(react.unstable_ConcurrentMode, null, /*#__PURE__*/React__default.createElement("div", {
+  }, /*#__PURE__*/React__default.createElement("div", {
     ref: measure,
     id: id,
     className: className,
@@ -2681,7 +2681,7 @@
       width: '100%',
       height: '100%',
       ...style
-    }
+    }, fremeworkChildren ? /*#__PURE__*/React__default.createElement(FiberProvider, Children) : null
   }), state && /*#__PURE__*/React__default.createElement(Portal, {
     state: state,
     graphs: graphs,
@@ -2689,7 +2689,7 @@
     handlePointer: handlePointer,
     events: events,
     setEvents: setEvents
-  }, children))), vr && ReactDOM.createPortal( /*#__PURE__*/React__default.createElement(VRButton, {
+  }, fremeworkChildren)), vr && ReactDOM.createPortal( /*#__PURE__*/React__default.createElement(VRButton, {
     enterOnly: true
   }), canvas.parentElement));
 });
